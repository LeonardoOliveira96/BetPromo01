version: '3.8'

services:
  # PostgreSQL Database (same as production)
  postgres:
    image: postgres:15-alpine
    container_name: betpromo-postgres-dev
    restart: unless-stopped
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-betpromo}
      POSTGRES_USER: ${POSTGRES_USER:-betpromo_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-betpromo_pass}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./api/database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - betpromo-dev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-betpromo_user} -d ${POSTGRES_DB:-betpromo}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: betpromo-pgadmin-dev
    restart: unless-stopped
    ports:
      - "${PGADMIN_PORT:-8080}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@betpromo.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin123}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_dev_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - betpromo-dev-network

  # BetPromo API (Development with hot reload)
  api-dev:
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    container_name: betpromo-api-dev
    restart: unless-stopped
    ports:
      - "${API_PORT:-3000}:3000"
      - "9229:9229"  # Node.js debugger port
    environment:
      NODE_ENV: development
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB:-betpromo}
      DB_USER: ${POSTGRES_USER:-betpromo_user}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-betpromo_pass}
      JWT_SECRET: ${JWT_SECRET:-dev-jwt-secret-key-not-for-production}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24h}
      BCRYPT_ROUNDS: ${BCRYPT_ROUNDS:-8}  # Lower for faster development
      UPLOAD_MAX_SIZE: ${UPLOAD_MAX_SIZE:-10485760}
      RATE_LIMIT_WINDOW: ${RATE_LIMIT_WINDOW:-900000}
      RATE_LIMIT_MAX: ${RATE_LIMIT_MAX:-1000}  # Higher limit for development
      DEBUG: "betpromo:*"
      LOG_LEVEL: debug
    volumes:
      - ./api/src:/app/src:ro
      - ./api/package.json:/app/package.json:ro
      - ./api/tsconfig.json:/app/tsconfig.json:ro
      - api_dev_uploads:/app/uploads
      - api_dev_node_modules:/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - betpromo-dev-network

  # Frontend (Development with hot reload)
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: betpromo-frontend-dev
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-5173}:5173"
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:3000/api}
      VITE_NODE_ENV: development
    volumes:
      - ./frontend/src:/app/src:ro
      - ./frontend/public:/app/public:ro
      - ./frontend/index.html:/app/index.html:ro
      - ./frontend/package.json:/app/package.json:ro
      - ./frontend/vite.config.ts:/app/vite.config.ts:ro
      - ./frontend/tsconfig.json:/app/tsconfig.json:ro
      - ./frontend/tailwind.config.ts:/app/tailwind.config.ts:ro
      - frontend_dev_node_modules:/app/node_modules
    depends_on:
      - api-dev
    networks:
      - betpromo-dev-network

volumes:
  postgres_dev_data:
    driver: local
  pgadmin_dev_data:
    driver: local
  api_dev_uploads:
    driver: local
  api_dev_node_modules:
    driver: local
  frontend_dev_node_modules:
    driver: local

networks:
  betpromo-dev-network:
    driver: bridge