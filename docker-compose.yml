services:
  # API Backend
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: betpromo-api
    restart: unless-stopped
    ports:
      - "${API_PORT:-3000}:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB:-betpromo}
      DB_USER: ${POSTGRES_USER:-betpromo_user}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-betpromo_pass}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      UPLOAD_DIR: ${UPLOAD_DIR:-./uploads}
    volumes:
      - api_uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - betpromo-network
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: betpromo-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-8080}:80"
    depends_on:
      - api
    networks:
      - betpromo-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: betpromo-postgres
    restart: unless-stopped
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-betpromo}
      POSTGRES_USER: ${POSTGRES_USER:-betpromo_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-betpromo_pass}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./api/database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - betpromo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-betpromo_user} -d ${POSTGRES_DB:-betpromo}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: betpromo-pgadmin
    restart: unless-stopped
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@betpromo.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin123}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - betpromo-network

volumes:
  postgres_data:
  api_uploads:
    driver: local
  pgadmin_data:
    driver: local

networks:
  betpromo-network:
    driver: bridge